[user]
  email = vaibhavgupta@gmail.com
  name = Vaibhav Gupta

[core]
  editor = vim
  excludesfile = ~/.gitignore

[color]
  diff = auto
  status = auto
  branch = auto
  pager = true
  ui = true

[alias]
  aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort

  ls = show  --name-only --oneline --name-only
  st = status -uno
  ss = status -s -b

  last = log -1 HEAD
  ll = log --stat
  gl = log --graph --pretty=oneline --abbrev-commit --decorate
  gll = log --abbrev-commit --graph --decorate --pretty=format:\"%C(green)%h%Creset -%C(yellow)%d%Creset %s %Cred<%an>%Creset %Cblue(%ar)%Creset\"
  diffc = diff --cached

  #
  # git grep
  og = "!f() { git grep --line-number \"$1\" | fzf --delimiter : --preview 'bat --style=numbers --color=always --highlight-line {2} {1}' --preview-window +{2}-/2; }; f"
  of = !git ls-files | fzf --preview 'bat --style=numbers --color=always {}' --preview-window +{2}-/2
  file = "!l() { git log --oneline --color --pretty=format:\"%C(green)%h%Creset -%C(yellow)%d%Creset %s %Cred<%an>%Creset %Cblue(%ar)%Creset\" \"$1\" | fzf --ansi  --header FileHistory --bind 'ctrl-/:change-preview-window(down,70%|hidden|)' -m --preview=\"git show --color=always {1} $1\"; }; l"

  #
  # Commands
  #

  ctags = !~/.git_template/hooks/ctags
  export = archive -o latest.tar.gz -9 --prefix=latest/
  churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'

  # Create a new PR in browser
  pr = !git  remote -v | awk '/fetch/{print $2}' | sed -e 's/:/\\//g' -e 's/git@/https:\\/\\//g' -e 's/\\.git//g' -e 's/$/\\/pull\\/new\\//g' | xargs -I {} echo {}$(git branch --show-current) | xargs open

  # Show remote HEAD branch
  sremote = !git remote show origin | sed -n '/HEAD branch/s/.*: //p'

  # Force Push
  fpush = !git add -u && git commit --amend --no-edit && git push -f origin `git branch --show-current`
  po = "!git push origin $(git branch --show-current); git st"

  # Purge remote branch
  fclean = !git remote prune origin

  # Checkout the head branch, rebase and switch
  update = "!_f() { git diff-index --quiet HEAD -- || return; myremote=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'); echo "Fetching $myremote";git fetch origin && git checkout $myremote; git rebase origin/$myremote; git st;}; _f || echo 'untracked changes. Stash first'"

  # Git fuzzy add. Add an option -o if you want to include others files.
  za = "!git ls-files -m  --exclude-standard | fzf --print0 -m --preview='git diff --color {}' | xargs -0 -t -o git add; git st"
  zb = "!git ls-files -m -o --exclude-standard | fzf --print0 -m --preview='git diff --color {}' | xargs -0 -t -o git add"

  # browse the repo in repo. Need github cli.
  browse = "!gh browse"

  # Switch to a different branch
  cb = "!git branch --sort=-committerdate --color --format='%(color:yellow)%(refname:short) %(color:red)%(HEAD) %(color:green)(%(committerdate:relative)) - %(color:blue)%(subject)' | fzf --ansi  --header Checkout -m --preview='git show --color=always {1} ' | cut -d' ' -f 1 | xargs git checkout"
  ;cb = "!git branch "$@" --sort=-committerdate --sort=-HEAD --format=$'%(HEAD) %(color:yellow)%(refname:short) %(color:green)(%(committerdate:relative))\t%(color:blue)%(subject)%(color:reset)' --color=always| column -ts$'\t'  | fzf --header Checkout --print0 -m --preview='git show --color=always {}' | xargs git checkout"
  ;b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

  # Open all the files from last commit.
  open = "!vim $(git show --pretty= --name-only)"

  root = "!git rev-parse --show-toplevel"
  op = "!_f() { cd -- ${GIT_PREFIX:-.};gh browse $1; }; _f"
  sha = "!gh browse $(git log -1 --pretty=format:'%H')"

[merge]
  tool = vimdiff2

[init]
  templatedir = ~/.git_template
  defaultBranch = main

[include]
  path = ~/.gitconfig.local

#
# GIT HELP
#

# Release
# git archive master --prefix='project/' | gzip > `git describe master`.tar.gz

# Git short log
# git shortlog --no-merges master --not v1.0.1

# Git checkout by date using rev-list
# git checkout `git rev-list -n 1 --first-parent --before="2009-07-27 13:37" master`

# Git update author
# git commit --amend --author="Vaibhav Gupta<vaibhav.gupta@gmail.com>" --no-edit

[credential "https://git.dev.box.net"]
	helper = 
	helper = !/usr/local/bin/gh auth git-credential
